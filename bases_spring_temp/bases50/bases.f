************************************************************************
*    ====================================================              *
      SUBROUTINE BASES( FXN, S, SIGMA, CTIME, IT1, IT2 )
*    ====================================================              *
*      Subroutine BASES for the Numerical integration.                 *
*      In terms of this program Integration can be done, furthermore   *
*      a probability distribution can be made for the event generation.*
*      The event with weight one is generated by program SPRING.       *
* ((Input))                                                            *
*    from the arguement                                                *
*      FXN    : Name of function program                               *
*    from the labeled common /BASE1/                                   *
*      XL(50) : Lower limits of the integration variabels              *
*      XU(50) : upper limits of the integration variabels              *
*      NDIM   : Dimension of the integration                           *
*      NCALL  : Number of sampling points per iteration                *
*    from the lebeled common /BASE2/                                   *
*      ITMX*  : Number of iteration                                    *
*      ACC*   : Required accuracies                                    *
* ((Output))                                                           *
*      S      : Estimate of the integral                               *
*      SIGMA  : Standard deviation of the estimate                     *
*      CTIME  : Computing time required for integration                *
*      IT1    : Number of iterations for the grid defining step        *
*      IT2    : Number of iterations for the integration step          *
C*                                                                     *
C*       Coded by S.Kawabata         April '94                         *
C*                                                                     *
C***********************************************************************
C
C
      IMPLICIT NONE
C     IMPLICIT REAL*8 (A-H,O-Z)

      DOUBLE PRECISION FXN,S,SIGMA,CTIME
      EXTERNAL FXN
      INTEGER IT1,IT2
*
*     JFLAG =  0 : First trial for defining grids.
*     JFLAG =  1 : First trial for event accumulation.
*     JFLAG =  2 : Second or more trial for defining grids.
*     JFLAG =  3 : Second or more trial for accumulation.
*                                                                      *
      INCLUDE 'base0.h'
      INCLUDE 'base1.h'
      INCLUDE 'base2.h'

      INCLUDE 'bsrslt.h'
      INCLUDE 'bwarn.h'

      INCLUDE 'bscntl.h'

      INCLUDE 'ninfo.h'
      INCLUDE 'bdate.h'
      INCLUDE 'btime.h'

      INTEGER LU
      PARAMETER (LU=6)
      INTEGER IDUM1,IDUM2

      INTEGER I

*-------------------------------------------------
*     Check the parameters defined by user
*------------------------------------------------------

      CALL BSCHCK

* ---------------------------------------------------------------
*          Initialize timer
* ---------------------------------------------------------------

       CALL BSDATE

       JFLAG  = 0
       IF( INTV .GT. 1 ) THEN
           CALL BSPRNT( LU, 1, IDUM1, IDUM2 )
       ENDIF

C  -----------------------------------------------------
C     Defining grids
C  -----------------------------------------------------
*
       DO 100 I = 1, NWILD
          IG(I) = 1
  100  CONTINUE

       CALL BSETGU

       IF( INTV .GT. 1 ) THEN
           CALL BSPRNT( LU, 4, IDUM1, IDUM2 )
       ENDIF

       CALL BSUTIM( 0, 2 )
*     ===================
       CALL BSINTG( FXN )
*     ===================        For a parallel computer
C                                      CALL BSCAST( JFLAG, 1 )
*  ----------------------------------------------------
*     Accumulation to make probability distribution
*  ----------------------------------------------------
*     ===================
       CALL BSINTG( FXN )
*     ===================        For a parallel computer
C                                      CALL BSCAST( JFLAG, 1 )
       S     = AVGI
       SIGMA = SD
       CTIME = STIME
       IT1   = ITG
       IT2   = ITF
       CALL BSUTIM( 0, 2 )
       TIMEB2 = RTIME

       IF( NERROR .GT. 0 ) THEN
c           WRITE(6,9900) - yoshi
 9900      FORMAT('****************************************',
     .               '****************************************',
     .           /'* (((( Warning ))))                     ',
     .               '                                       *',
     .           /'*                                       ',
     .               '                                       *')
           DO 990 I = 1,NERROR
c              WRITE(6,9901) ERROR(I) - yoshi
 9901         FORMAT(A80)
  990      CONTINUE
c           WRITE(6,9902) -yoshi
 9902      FORMAT('*                                       ',
     .               '                                       *',
     .           /'*(( Suggestion ))                       ',
     .               '                                       *',
     .           /'* (1) Try integration again with larger ',
     .               'number of sample points than this job. *',
     .           /'* or                                    ',
     .               '                                       *',
     .           /'* (2) The integral variables are not sui',
     .               'ted for the function.                  *',
     .           /'*     Take another integral variables !!',
     .               '                                       *',
     .           /'*                                       ',
     .               '                                       *',
     .           /'****************************************',
     .               '****************************************')
       ENDIF
       IF( INTV .GT. 1 ) THEN
           CALL BSPRNT( LU, 2, IDUM1, IDUM2 )
       ENDIF

       RETURN
       END
